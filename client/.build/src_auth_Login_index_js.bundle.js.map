{"version":3,"file":"src_auth_Login_index_js.bundle.js","mappings":";;;;;;;;AAAA;AACA,kCAAkC,mBAAO,CAAC,2GAAsD;AAChG;AACA;AACA;AACA;AACA;;;;;;;;;;;ACNA;AACA,kCAAkC,mBAAO,CAAC,2GAAsD;AAChG;AACA;AACA;AACA;AACA;;;;;;;;;;;ACNA;AACA,oPAAoP,WAAW;AAC/P;AACA;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;ACHA,UAAU,mBAAO,CAAC,0JAA8E;AAChG,0BAA0B,mBAAO,CAAC,2NAA2G;;AAE7I;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;AAIA;;;;;;;;;;AClBA,UAAU,mBAAO,CAAC,0JAA8E;AAChG,0BAA0B,mBAAO,CAAC,8NAA2G;;AAE7I;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;AAIA;;;;;;;;;;AClBA,aAAa,mBAAO,CAAC,gDAAiB;AACtC,cAAc,mBAAO,CAAC,wDAAoB;AAC1C,iBAAiB,mBAAO,CAAC,uDAAiB;AAC1C,aAAa,mBAAO,CAAC,yCAAY;AACjC,kBAAkB,mBAAO,CAAC,0CAAgB;;AAE1C,mBAAO,CAAC,iDAAc;;AAEtB;AACA;AACA;AACA;;AAEA,KAAK;;AAEL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;;;;;;;;;;ACrBD,qBAAqB,mBAAO,CAAC,kDAAmB;AAChD,cAAc,mBAAO,CAAC,oCAAY;;AAElC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,IAAI;;AAEf;AACA,OAAO;AACP;AACA;AACA,CAAC;;;;;;;;;;AClCD,kBAAkB,mBAAO,CAAC,gDAAiB;AAC3C,iBAAiB,mBAAO,CAAC,8CAAgB;AACzC,yBAAyB,mBAAO,CAAC,4EAA+B;AAChE,cAAc,mBAAO,CAAC,oCAAY;;AAElC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACxBA,kBAAkB,mBAAO,CAAC,gDAAiB;;AAE3C;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACpBA,eAAe,mBAAO,CAAC,oDAAmB;AAC1C,iBAAiB,mBAAO,CAAC,0DAAiB;AAC1C,mBAAO,CAAC,oDAAc;;AAEtB;;AAEA,CAAC;AACD;AACA;AACA,CAAC","sources":["webpack://star-citizen-universe-client/./src/auth/Login/style.scss","webpack://star-citizen-universe-client/./src/layouts/Empty/style.scss","webpack://star-citizen-universe-client/./src/auth/Login/template.html","webpack://star-citizen-universe-client/./src/layouts/Empty/template.html","webpack://star-citizen-universe-client/./src/auth/Login/style.scss?92c1","webpack://star-citizen-universe-client/./src/layouts/Empty/style.scss?eafb","webpack://star-citizen-universe-client/./src/auth/Login/index.js","webpack://star-citizen-universe-client/./src/core/mixins/LocalStorageable.js","webpack://star-citizen-universe-client/./src/core/page/Layout.js","webpack://star-citizen-universe-client/./src/core/page/Page.js","webpack://star-citizen-universe-client/./src/layouts/Empty/index.js"],"sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Module\nvar code = \"<div>\\n  <h3>Login</h3>\\n  <form :on:submit.prevent=\\\"this.onSubmit()\\\">\\n    <form-text-field \\n      :label=\\\"'Username'\\\" \\n      :name=\\\"'username'\\\" >\\n    </form-text-field>\\n    <form-text-field \\n      :class-name=\\\"`nice ${this.test} ok`\\\"\\n      :label=\\\"'Password'\\\" \\n      :name=\\\"'password'\\\" \\n      :type=\\\"'password'\\\" >\\n    </form-text-field>\\n      \\n    <input type=\\\"submit\\\" value=\\\"submit\\\" />\\n  </form>\\n</div>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div>\\n  <div as=\\\"container\\\">\\n    \\n  </div>\\n</div>\";\n// Exports\nmodule.exports = code;","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","const Page = require('@core/page/Page')\nconst Empty = require('@app/layouts/Empty')\nconst template = require('./template.html')\nconst Auth = require('../service')\nconst navigator = require('@app/navigator')\n\nrequire('./style.scss')\n\nmodule.exports = class Home extends Page {\n  async onSubmit() {\n    console.log('submitting')\n    await Auth.login({\n\n    })\n\n    await navigator.navigate('/')\n  }\n}.define({\n  name: 'app-login',\n  template,\n  layout: Empty,\n})","const Propertiable = require(\"core/Propertiable\")\nconst mixer = require('core/mixer')\n\nmodule.exports = mixer.mixin([Propertiable()], (base) => {\n  return class LocalStorageable extends base {\n    static localStorage(options) {\n      this.localStorageOptions = options\n      return this\n    }\n\n    constructor(...args) {\n      super(...args)\n      const options = this.constructor.localStorageOptions\n      if (!options) { return }\n\n      let initialValues = localStorage.getItem(options.name)\n      if (initialValues) {\n        initialValues = JSON.parse(initialValues)\n        Object.assign(this, initialValues)\n      }\n\n      this.on('propertyChanged', () => {\n        const values = this[Propertiable.symbol]\n        const valuesToSave = Object.entries(values)\n          .filter(([name]) => options.properties.indexOf(name) !== -1)\n          .reduce((acc, [name, value]) => {\n            acc[name] = value\n            return acc\n          }, {})\n\n        localStorage.setItem(options.name, JSON.stringify(valuesToSave))\n      })\n    }\n  }\n})","const Component = require('@core/Component')\nconst renderer = require('@core/renderer')\nconst LocalStorageable = require('@core/mixins/LocalStorageable')\nconst mixer = require('core/mixer')\n\nmodule.exports = class Layout extends mixer.extends(Component, [LocalStorageable()]) {\n  initialized() {\n    if (!this.container)\n      throw new Error(\"Layout '\" + this.constructor.name + \"' must implement a container\");\n    return super.initialized();\n  }\n\n  async setView(view) {\n    const oldView = this.currentView\n    if (oldView) {\n      this.container.removeChild(oldView)\n    }\n    this.currentView = view\n    this.container.appendChild(this.currentView)\n    await this.currentView.attach(this)\n    if (oldView) {\n      renderer.destroy(oldView)\n    }\n  }\n}\n","const Component = require('@core/Component')\n\nconst pages = {}\n\nmodule.exports = class Page extends Component {\n\n  static register(pageName, layoutClass) {\n    if (!views[pageName]) {\n      this.viewName = pageName\n      this.layoutClass = layoutClass\n      views[pageName] = this\n      return this\n    } else\n      throw new Error(\"View with name '\" + pageName + \"' is already registered\")\n\n  }\n\n  static resolve(pageName) {\n    return pages[pageName]\n  }\n}\n","const Layout = require('@core/page/Layout')\nconst template = require('./template.html')\nrequire('./style.scss')\n\nmodule.exports = class Empty extends Layout {\n\n}.define({\n  name: 'app-layout-empty',\n  template,\n})"],"names":[],"sourceRoot":""}