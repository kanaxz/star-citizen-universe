{"version":3,"file":"815.bundle.js","mappings":";;;;;AAAA;AACA,kCAAkC,mBAAO,CAAC,KAAgE;AAC1G;AACA;AACA,uCAAuC,WAAW,YAAY,aAAa,mBAAmB,kBAAkB,mBAAmB,kBAAkB,YAAY,+BAA+B,oBAAoB,WAAW,aAAa,sBAAsB,yBAAyB,aAAa,mBAAmB,WAAW,YAAY,gCAAgC,+BAA+B,eAAe,YAAY,YAAY,+BAA+B,kCAAkC,aAAa,mBAAmB,sCAAsC,aAAa,mBAAmB,uBAAuB,+BAA+B,YAAY,eAAe,4CAA4C,4BAA4B,0CAA0C,eAAe,mDAAmD,aAAa,yDAAyD,aAAa,mBAAmB,mBAAmB,iBAAiB,iEAAiE,aAAa,2BAA2B,mBAAmB,yEAAyE,aAAa,mBAAmB,mBAAmB,gFAAgF,eAAe,gBAAgB,cAAc,WAAW,iCAAiC,iEAAiE,aAAa,OAAO,mBAAmB,eAAe,kBAAkB,iBAAiB,mEAAmE,kBAAkB,mBAAmB,wCAAwC,YAAY,WAAW,YAAY,yBAAyB;AACrvD;AACA;;;;;;;;ACNA;AACA,g9BAAg9B,wBAAwB;AACx+B;AACA;;;;;;;ACHA,UAAU,mBAAO,CAAC,KAAwF;AAC1G,0BAA0B,mBAAO,CAAC,KAA2J;;AAE7L;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;AAIA;;;;;;;AClBA,iBAAiB,mBAAO,CAAC,KAAiB;AAC1C,kBAAkB,mBAAO,CAAC,KAAkB;AAC5C,sBAAsB,mBAAO,CAAC,KAAuB;AACrD,cAAc,mBAAO,CAAC,KAAkB;AACxC,QAAQ,eAAe,EAAE,mBAAO,CAAC,KAAS;AAC1C,gBAAgB,mBAAO,CAAC,KAAqB;AAC7C,cAAc,mBAAO,CAAC,KAAmB;AACzC,mBAAO,CAAC,KAAc;;AAEtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,4BAA4B,kBAAkB,YAAY;AAC1D;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA,+BAA+B,qBAAqB;AACpD;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,iEAAiE,0BAA0B;AAC3F;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,6EAA6E,kBAAkB;AAC/F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG","sources":["webpack://star-citizen-universe-client/../modules/storage/hedera/StoragePage/style.scss","webpack://star-citizen-universe-client/../modules/storage/hedera/StoragePage/template.html","webpack://star-citizen-universe-client/../modules/storage/hedera/StoragePage/style.scss?e402","webpack://star-citizen-universe-client/../modules/storage/hedera/StoragePage/index.js"],"sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../client/node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"storage-page{width:100%;height:100%;display:flex;flex-direction:row;position:relative}storage-page .left{width:fit-content;height:100%;border-right:1px solid #e1e1e1}storage-page>.right{width:100%;display:flex;flex-direction:column}storage-page>.right>.bar{display:flex;flex-direction:row;width:100%;height:35px;border-bottom:1px solid #e1e1e1}storage-page>.right>.bar input{font-size:16px;height:100%;border:none;border-right:1px solid #e1e1e1}storage-page>.right>.bar .actions{display:flex;flex-direction:row}storage-page>.right>.bar .actions div{display:flex;align-items:center;justify-content:center;border-right:1px solid #e1e1e1;padding:5px;cursor:pointer}storage-page>.right>.bar .actions div:hover{background-color:aquamarine}storage-page>.right>.bar .actions div svg{font-size:20px}storage-page>.right>.bar .actions div.upload input{display:none}storage-page>.right editable-grid .folder-panel .folders{display:flex;flex-direction:row;align-items:center;margin-left:10px}storage-page>.right editable-grid .folder-panel .folders .branch{display:flex;flex-direction:row-reverse;align-items:center}storage-page>.right editable-grid .folder-panel .folders .branch .folder{display:flex;flex-direction:row;align-items:center}storage-page>.right editable-grid .folder-panel .folders .branch .folder::after{font-size:26px;font-weight:600;content:\\\" \\\";width:15px;border-bottom:1px dashed #e1e1e1}storage-page>.right editable-grid .folder-panel .storage-objects{display:flex;flex:1;flex-direction:row;flex-wrap:wrap;padding-left:10px;padding-top:10px}storage-page>.right editable-grid .folder-panel .storage-objects>*{margin-right:10px;margin-bottom:10px}storage-page>.right editable-grid .file{border:none;width:100%;height:100%;background-color:#e1e1e1}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Module\nvar code = \"<self :v-selectable-root=\\\"'horizontal'\\\" :v-loader=\\\"this.@loading size '50px'\\\"> <div class=\\\"left\\\"> <folder-tree :folder=\\\"this.@currentFolder\\\" :root=\\\"this.initialFolder\\\" :on-selected=\\\"this.focusFolder(event.folder)\\\"> </folder-tree> </div> <div class=\\\"right\\\"> <div class=\\\"bar\\\"> <input as=\\\"input\\\" :v-input-delay=\\\"this.search(node.value)\\\" placeholder=\\\"search\\\"> <div class=\\\"actions\\\"> <div :on-click=\\\"this.inputFile.click()\\\" class=\\\"upload\\\"> <input type=\\\"file\\\" as=\\\"inputFile\\\" :on-change=\\\"this.uploadFile(node.files[0])\\\"/> <i class=\\\"fa-solid fa-file-arrow-up\\\"></i> </div> <div> <i class=\\\"fa-solid fa-link\\\"></i> </div> <div :on-click=\\\"this.createFolder()\\\"> <i class=\\\"fa-solid fa-folder-plus\\\"></i> </div> </div> </div> <template in=\\\"templates\\\" :for=\\\"File\\\" :as=\\\"'file'\\\"> <iframe class=\\\"file\\\" :src=\\\"file?.@path\\\"> </iframe> </template> <editable-grid class=\\\"content\\\" as=\\\"grid\\\" :templates=\\\"this.templates\\\" :directions=\\\"{left: false, top: false}\\\" :max-deepth=\\\"2\\\"> <grid-panel class=\\\"folder-panel\\\"> <slot name=\\\"header\\\"> <div class=\\\"folders\\\"> <div class=\\\"branch\\\" :v-for=\\\"folder of this.@currentFolder.branch.filterLink((f)=>f === this.initialFolder || f.branch.indexOf(this.initialFolder) !== -1)\\\"> <div class=\\\"folder\\\"> <folder-row :on-click=\\\"this.focusFolder(folder)\\\" :model=\\\"folder\\\"> </folder-row> </div> </div> <folder-row class=\\\"selected open\\\" :model=\\\"this.@currentFolder\\\"> </folder-row> </div> </slot> <slot> <div class=\\\"storage-objects\\\" :v-for=\\\"storageObject of this.@storageObjects.sortLink((o1, o2)=> (o1 instanceof Folder ? 0 : 1) - (o2 instanceof Folder ? 0 : 1))\\\"> <model-card :model=\\\"storageObject\\\" :v-selectable=\\\"this.onFileObjectClicked(storageObject)\\\"> </model-card> </div> </slot> </grid-panel> </editable-grid> </div> </self> \";\n// Exports\nmodule.exports = code;","var api = require(\"!../../../../client/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../client/node_modules/css-loader/dist/cjs.js!../../../../client/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./style.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","const template = require('./template.html')\nconst Component = require('hedera/Component')\nconst StorageObject = require('storage/StorageObject')\nconst Array = require('core/types/Array')\nconst { File, Folder } = require('storage')\nconst context = require('core-client/context')\nconst Right = require('ressourcing/Right')\nrequire('./style.scss')\n\nmodule.exports = class StoragePage extends Component {\n  constructor(initialFolder) {\n    super()\n    this.initialFolder = initialFolder\n    this.files = new Array()\n  }\n\n  async onInit() {\n    await this.focusFolder(this.initialFolder, false)\n  }\n\n  focus() {\n    this.input.focus()\n  }\n\n  async focusFolder(folder, pushState = true) {\n    this.loading = true\n    await folder.children.load()\n    await folder.branch.load({\n      children: true,\n    })\n\n    this.currentFolder = folder\n    this.storageObjects = folder.children\n    if (pushState) {\n      //history.pushState({}, '', `/explorer${folder.path}`)\n    }\n    this.loading = false\n  }\n\n  async onFileObjectClicked(storageObject) {\n    if (storageObject instanceof Folder) {\n      await this.focusFolder(storageObject)\n    } else {\n      this.grid.add(storageObject)\n      this.event('selected', { file: storageObject })\n    }\n  }\n\n  async onKeyUp(event) {\n    if (event.key === 'Backspace') {\n      const folder = this.currentFolder.folder\n      if (!folder) { return }\n      await this.focusFolder(folder)\n    }\n    console.log(event.key)\n  }\n\n  async search(value) {\n    this.currentFolder = null\n    this.storageObjects = await StorageObject.collection.find([{ $match: ['$name', value] }])\n  }\n\n  async uploadFile(nativeFile) {\n    this.progress = 0\n    const onUploadProgress = (event) => {\n      this.progress = Math.round((100 * event.loaded) / event.total)\n      console.log('progress', this.progress)\n    }\n\n    const values = {\n      folder: this.currentFolder,\n      read: new Right({\n        type: 'inherited'\n      }),\n      edit: new Right({\n        type: 'inherited'\n      })\n    }\n    const file = await StorageObject.collection.upload(nativeFile, values, { onUploadProgress })\n    this.progress = null\n    this.files.push(file)\n    this.currentFile = file\n  }\n\n  removeFile(file) {\n    console.log('files', this.files.length)\n    this.files.remove(file)\n    if (file === this.currentFile) {\n      this.currentFile = this.files[0]\n    }\n    console.log('files', this.files.length)\n  }\n\n  async createFolder() {\n    const name = await this.currentFolder.getNewFolderName(context)\n\n    await Folder.collection.create({\n      '@type': 'folder',\n      folder: this.currentFolder.toJSON(),\n      name,\n      read: new Right({\n        type: 'inherited'\n      }),\n      add: new Right({\n        type: 'inherited'\n      }),\n      edit: new Right({\n        type: 'inherited'\n      })\n    })\n  }\n}\n  .define({\n    name: 'storage-page',\n    template,\n  })\n  .properties({\n    folder: 'any',\n    currentFolder: 'any',\n    storageObjects: 'any',\n    currentFile: 'any',\n    loading: 'any',\n  })\n  .variables({\n    Folder,\n    File\n  })"],"names":[],"sourceRoot":""}